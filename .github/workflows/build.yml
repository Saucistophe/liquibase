# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build and Test

## Temporarily moved to pull_request so branch builds from this
on: [ pull_request ]

jobs:
  build:
    name: Build & Test (Java ${{ matrix.java }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        java: [8, 11, 16]
    steps:
    - uses: actions/checkout@v2
    - name: Local Maven Repository Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.m2/repository
          !~/.m2/repository/org/liquibase
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Built Code Cache
      if: ${{ matrix.java == 8}}
      uses: actions/cache@v2
      with:
        key: built-code-${{ github.sha }}
        path: ./**/target
    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java }}
        distribution: 'adopt'
    - name: Build & Test
      run: mvn -B -Dbuild.number=${{ github.run_number }} -Dbuild.commit=${{ github.sha }} -pl '!liquibase-dist' clean test package
    - name: Archive Test Results
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: liquibase-test-results-jdk${{ matrix.java }}
        path: ./**/target/surefire-reports

    - name: Archive Modules
      if: ${{ matrix.java == 8}}
      uses: actions/upload-artifact@v2
      with:
        name: liquibase-modules
        path: |
          */target/*-0-SNAPSHOT.jar

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    needs: build
    if: false #disabled during development
    steps:
      - uses: actions/checkout@v2
      - name: Local Maven Repository Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.m2/repository
            !~/.m2/repository/org/liquibase
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'
      - name: Restore Built Code Cache
        uses: actions/cache@v2
        with:
          key: built-code-${{ github.sha }}
          path: ./**/target

      - name: Login to Artifactory
        uses: docker/login-action@v1
        with:
          registry: docker-dev.artifactory.datical.net
          username: ${{ secrets.RT_USER }}
          password: ${{ secrets.RT_TOKEN }}
      - name: Start Docker Databases
        run: docker-compose -f ./liquibase-integration-tests/docker/docker-compose.yml up -d
      - name: Run Tests
        run: mvn -B jar:jar jar:test-jar surefire:test
      - name: Stop Docker Databases
        run: docker-compose -f ./liquibase-integration-tests/docker/docker-compose.yml down
      - name: Archive Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: liquibase-test-results-integration
          path: |
              ./**/target/surefire-reports

  package:
    name: Build Artifacts
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2

      - name: Find corresponding branches
        id: create-check
        uses: actions/github-script@v4
        with:
          script: |
            let branch = await github.repos.getBranch({
              "owner": "datical",
              "repo": "liquibase-pro",
              "branch": "unversioned-master",
            });
            console.log(branch);

      - name: Local Maven Repository Cache
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Built Code Cache
        uses: actions/cache@v2
        with:
          key: built-code-${{ github.sha }}
          path: ./**/target

      - name: Set up JDK 8
        uses: actions/setup-java@v2
        with:
          java-version: '8'
          distribution: 'adopt'

      - name: Install Built Modules
        run: |
          (find . -name *-SNAPSHOT.jar -exec mvn -B org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file -Dfile={} \;)
          (find . -name *-SNAPSHOT-sources.jar -exec mvn -B org.apache.maven.plugins:maven-install-plugin:3.0.0-M1:install-file -Dfile={} \;)

      - name: Build Final Jar & Tar/Zips
        run: mvn -B -pl liquibase-dist package

      - name: Archive Packages
        uses: actions/upload-artifact@v2
        with:
          name: liquibase-artifacts
          path: |
            liquibase-dist/target/liquibase-0-SNAPSHOT.tar.gz
            liquibase-dist/target/liquibase-0-SNAPSHOT.zip
            liquibase-dist/target/liquibase-0-SNAPSHOT.jar
            liquibase-maven-plugin/target/liquibase-maven-plugin-0-SNAPSHOT.jar
            liquibase-cdi/target/liquibase-cdi-0-SNAPSHOT.jar

#      - name: Create Check
#        id: create-check
#        uses: actions/github-script@v4
#        if: always()
#        with:
#          script: |
#            await github.checks.create({
#              "owner": "datical",
#              "repo": "liquibase-pro",
#              "name": "Liquibase Core Build",
#              "head_sha": "${{ github.sha }}",
#              "status": "${{ job.status }}",
#              "details_url": "https://github.com/liquibase/liquibase/actions/runs/${{ github.run_id }}"
#            });
